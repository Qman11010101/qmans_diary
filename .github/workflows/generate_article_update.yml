# 記事アップデートによるRepository Dispatch
# mainとpreviewどちらのブランチでも実行

name: Generate all articles when article is updated
on:
  repository_dispatch:
    types: [update_post]

jobs:
  generate-prod:
    name: articles-generate-all-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Change branch
        run: |
          git fetch origin pages-prod || { echo "Failed to fetch pages-prod"; exit 1; }
          git checkout -B pages-prod origin/pages-prod || git checkout -B pages-prod || { echo "Failed to switch to pages-prod"; exit 1; }
          git reset --hard origin/main || { echo "Failed to reset pages-prod to main"; exit 1; }
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.23.0"
          cache: true
      - name: Install microblogen
        run: GOBIN=$(pwd) GOPRIVATE="github.com/Qman11010101/microblogen" go install github.com/Qman11010101/microblogen/v2@latest
      - name: run microblogen
        run: $(pwd)/microblogen
        env:
          MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
          SERVICE_DOMAIN: ${{ secrets.SERVICE_DOMAIN }}
          EXPORT_PATH: "./output"
          RESOURCES_PATH: "./resources"
          LATEST_ARTICLES: 5
          ARTICLES_PER_PAGE: 10
          TIMEZONE: "Asia/Tokyo"
          CATEGORY_TAG_NAME: "Category"
          TIME_ARCHIVE_NAME: "Archive"
      - name: remove microblogen binary & .github
        run: |
          rm microblogen
          rm -rf .github
      - name: Commit & Push
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "[Prod] Deploy: $(date -u)"
          git push origin pages-prod --force
      - name: Return to main
        run: |
          git checkout main
      - name: Python environment
        if: github.event.client_payload.type == 'new' || github.event.client_payload.type == 'edit'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Tweet
        if: github.event.client_payload.type == 'new' || github.event.client_payload.type == 'edit'
        run: |
          pip install requests_oauthlib
          python .github/workflows/tweet.py
        env:
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_API_KEY_SECRET: ${{ secrets.X_API_KEY_SECRET }}
          X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
          ID: ${{github.event.client_payload.id}}
          MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
          SERVICE_DOMAIN: ${{ secrets.SERVICE_DOMAIN }}
          TIMEZONE: "Asia/Tokyo"
  generate-prev:
    name: articles-generate-all-prev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Change branch
        run: |
          git fetch origin preview || { echo "Failed to fetch preview"; exit 1; } 
          git checkout -B preview origin/preview || git checkout -B preview || { echo "Failed to switch to preview"; exit 1; }
          git fetch origin pages-prev || { echo "Failed to fetch pages-prev"; exit 1; }
          git checkout -B pages-prev origin/pages-prev || git checkout -B pages-prev || { echo "Failed to switch to pages-prev"; exit 1; }
          git reset --hard origin/preview || { echo "Failed to reset pages-prev to preview"; exit 1; }
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.23.0"
          cache: true
      - name: Install microblogen
        run: GOBIN=$(pwd) GOPRIVATE="github.com/Qman11010101/microblogen" go install github.com/Qman11010101/microblogen@latest
      - name: run microblogen
        run: $(pwd)/microblogen
        env:
          MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
          SERVICE_DOMAIN: ${{ secrets.SERVICE_DOMAIN }}
          TIMEZONE: "Asia/Tokyo"
      - name: remove microblogen binary & .github
        run: |
          rm microblogen
          rm -rf .github
      - name: Commit & Push
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "[Prev] Deploy: $(date -u)"
          git push origin pages-prev --force
